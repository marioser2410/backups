cosmos-common-template:
  deploy:
    name: cosmos-riskmanagement-ui
    namespace: cosmos-riskmanagement-ui
    replicas: 1
    port: 80
    targetport: 80
    image: "cosmos.riskmanagement.ui"
    registry: "637423636753.dkr.ecr.eu-central-1.amazonaws.com"
    tag: 0.0.2
    resources:
      enabled: true
      requestCpu: 100m
      requestMemory: 256Mi
      limitCpu: 200m
      limitMemory: 512Mi
  nodeselector:
    enabled: true
    key: kubernetes.io/arch
    value: amd64
  tolerations:
    enabled: true
    key: type
    value: amd_64
    operator: Equal
    effect: NoSchedule
  # tolerations:
  #   - key: CriticalAddonsOnly
  #     value: true
  #     operator: Equal
  #     effect: NoSchedule
  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: type
  #           operator: In
  #           values:
  #           - amd64
    # podAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #   - labelSelector:
    #       matchExpressions:
    #       - key: security
    #         operator: In
    #         values:
    #         - VALUE1
    #     topologyKey: KEY
    # podAntiAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #   - labelSelector:
    #       matchExpressions:
    #       - key: security
    #         operator: In
    #         values:
    #         - VALUE2
    #     topologyKey: KEY  
  # topologySpreadConstraints:
  # - maxSkew: 1
  #   topologyKey: kubernetes.io/hostname
  #   whenUnsatisfiable: DoNotSchedule
  #   labelSelector:
  #     matchLabels:
  #       app: test-mycrm-audit-host
  #   matchLabelKeys:
  #     - ip-10-101-52-36.eu-west-1.compute.internal  
  svc:
    enabled: true
    name: cosmos-riskmanagement-ui
    port: 80
  hpa:
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 70
  probeLiveness:
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
    periodSeconds: 30
    initialDelaySeconds: 60
    path: /
  probeReadiness:
    timeoutSeconds: 5
    failureThreshold: 1
    successThreshold: 1
    periodSeconds: 10
    initialDelaySeconds: 60
    path: /
  ingress:
    enabled: true
    host: mercury.ingotbrokers.app
    class: nginx-internal
  tls:
    domain: ingotbrokers.app
    secretName: letsencrypt-cert
  configmap:
    enabled: true
    appsettings: |
      {
        "riskApiUrl": "//risk-api.ingotbrokers.app/api/v1/",
        "channelApiUrl": "//risk-channels-api.ingotbrokers.app/api/v1/",
        "ssoApiUrl": "//auth.ingotbrokers.app/",
        "identityApiUrl": "//auth-api.ingotbrokers.app/api/v1/",
        "metadataApiUrl": "//metadata-api.ingotbrokers.app/api/v1/",
        "auditApiUrl": "//audit-api.ingotbrokers.app/api/v1/",
        "notificationApiUrl": "//notification-api.ingotbrokers.app/",
        "reconciliationApiUrl": "//reconciliation-api.ingotbrokers.app/api/v1/",
        "quoteDataApiUrl": "//quotedata-api.ingotbrokers.app/api/v1/",
        "tradeApiUrl": "//trade-api.ingotbrokers.app/api/v1/",
        "alertsApiUrl": "//risk-alerts-api.ingotbrokers.app/api/v1/",
        "apiVersion": "0.1.1122",
        "uiVersion": "1.0.45",
        "minutesUntilLogout": 1440,
        "checkIntervalInMiliseconds": 5000,
        "minimumDatasourceStartDateInDays": 30,
        "customizerEnabled": true,
        "changeDetectionInterval": 200,
        "datasourceDelayTime": 50,
        "releaseDate": "02-Mar-2023",
        "identityScope": "openid profile offline_access Audit.Api Metadata.Api QuoteData.Api RiskManagement.Alerts.Api RiskManagement.Channels.Api RiskManagement.Api Reconciliation.Api TradeData.Api User.Api WebSocket.Api",
        "sentryDsn": "SENTRY_DSN_HERE",
        "sentryEnabled": false,
        "sentryEnvironment": "PROD",
        "endOfDayPopupTTL": 10000,
        "maxItemCountToBeCached": 2500,
        "loadingModuleTimeout": 30000,
        "highlightTimeout": 60000
      }